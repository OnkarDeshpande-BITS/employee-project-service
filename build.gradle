buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'eclipse'


group 'scalable-services'

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.21.7"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.43.2'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    
}

mainClassName = "org.bits.scalable.service.employee.project.EmployeeProjectService"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    compile group: 'com.google.api.grpc', name: 'proto-google-common-protos', version : '2.9.6'
	compile group: 'io.grpc', name: 'grpc-protobuf', version : '1.43.2'
	compile group: 'io.grpc', name: 'grpc-stub', version : '1.43.2'
	compile group: 'io.grpc', name: 'grpc-netty', version : '1.43.2'
    
    
}

sourceSets {
    main {
	    java {
		     srcDirs 'build/generated/source/proto/main/grpc'
			 srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

def genProtoGrpcSrcDir = 'build/generated/source/proto/main/grpc'
def genProtoJavaSrcDir = 'build/generated/source/proto/main/java'

task addGeneratedToSource(dependsOn: 'generateProto') {
     project.sourceSets.matching { it.name ==  "main" }.all {
	    it.java.srcDir genProtoGrpcSrcDir
		it.java.srcDir genProtoJavaSrcDir
	}
}

tasks.eclipse.dependsOn 'addGeneratedToSource'

def dockerWorkDir = 'build/docker'

jar {
    doFirst {
        copy {
            from "build/libs"
            into dockerWorkDir+ "/lib"
        }
        copy {
            from configurations.compile
            into dockerWorkDir+ "/lib"
        }
        copy {
            from configurations.runtime
            into dockerWorkDir+ "/lib"
        }
    }
    manifest {
        attributes 'Main-Class' : 'org.bits.scalable.service.employee.project.EmployeeProjectService'
        attributes 'Class-Path' : configurations.compile.collect { it.getName() }.join(' ')
    }
}

distTar {
    doLast {
        copy {
            from "build/libs"
            into dockerWorkDir+ "/lib"
        }
        copy {
            from configurations.compile
            into dockerWorkDir+ "/lib"
        }
        copy {
            from configurations.runtime
            into dockerWorkDir+ "/lib"
        }
    }
}

